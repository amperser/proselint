[project]
name = "proselint"
description = "A linter for prose."
version = "0.14.0"
license = {file = "LICENSE.md"}
authors = [{ name = "Amperser Labs", email = "hello@amperser.com"}]
readme = "README.md"
classifiers = [
	"Programming Language :: Python :: Implementation :: CPython",
	"Programming language :: Python :: 3",
	"Programming language :: Python :: 3.10",
	"Programming language :: Python :: 3.11",
	"Programming language :: Python :: 3.12",
	"Programming language :: Python :: 3.13",
	"Programming language :: Python :: 3.14",
	"License :: OSI Approved :: BSD License",
]
requires-python = ">=3.10"
dependencies = []

[project.urls]
Homepage = "https://github.com/amperser/proselint"
Repository = "https://github.com/amperser/proselint"
Issues = "https://github.com/amperser/proselint/issues"

[project.scripts]
proselint = "proselint.command_line:main"

[build-system]
requires = ["uv_build>=0.7.22,<0.8.0"]
build-backend = "uv_build"

[tool.poe.tasks]
test = "pytest"
test-cover = "pytest --cov=proselint --cov-report=lcov"
lint = "ruff check proselint tests"
format = "ruff format --preview proselint tests"

[dependency-groups]
test = [
	"hypothesis>=6.135.11",
	"pytest>=8.4.1",
	"pytest-cov>=6.2.1",
	"rstr>=3.2.2",
]
dev = [
	"ruff>=0.1.14",
	"poethepoet>=0.34.0",
]
web = [
	"APScheduler>=3.5.3",
	"Flask-API>=1.0",
	"Flask-Cors>=3.0.4",
	"Flask>=1.1.4",
	"Flask-Limiter>=1.0.1",
	"gunicorn>=19.8.1",
	"gmail @ git+https://github.com/charlierguo/gmail.git",
	"redis>=2.10.6",
	"requests>=2.19.1",
	"rq>=0.12.0",
]

[tool.uv.build-backend]
module-name = "proselint"
module-root = ""
source-include = ["tests/**"]

[tool.ruff]
line-length = 80

[tool.ruff.lint]
select = [
	"A",	# flake8-builtins
	"ANN",	# flake8-annotations
	"ARG",	# flake8-unused-arguments
	"B",	# Bugbear
	"COM",	# flake8-commas
	"C4",	# flake8-comprehensions
	"DTZ",	# flake8-datetimez
	"D",	# pydocstyle
	"E",	# pycodestyle errors
	"F",	# pyflakes
	"FA",	# flake8-future-annotations
	"FBT",	# boolean traps
	"FLY",	# flynt
	"FURB", # refurb
	"G",	# flake8-logging-format
	"I",	# incomplete isort
	"INP",	# flake8-no-pep420
	"LOG",	# flake8-logging
	"N",	# naming
	"NPY",	# NumPy-specific rules
	"PD",	# pandas-vet
	"PERF", # Perflint
	"PL",	# Pylint
	"PTH",	# flake8-use-pathlib
	"PYI",	# flake8-pyi
	"RET",	# flake8-return
	"RUF",	# Ruff-specific rules
	"S",	# bandit, security
	"SLF",	# flake8-self
	"SIM",	# flake8-simplify
	"TID",	# flake8-tidy-imports
	"TCH",	# flake8-type-checking
	"T10",	# flake8-print
	"UP",	# pyupgrade
	"W",	# pycodestyle warnings
	"YTT",	# flake8-2020
]
ignore = [
	"COM812",  # trailing comma -> done by formatter
	"D203",    # no blank lines between classes and documentation
	"D212",    # consistent start level for multi-line edocumentation
	"D415",    # first line of docs should end with a period
]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "SLF001", "PLC2701"]
"proselint/checks/**" = ["RUF001"]
